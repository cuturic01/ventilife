package backward;

import com.ftn.sbnz.model.models.Certificate
import com.ftn.sbnz.model.models.RespiratorMode


query isModeAppropriate(String name, String group, Boolean patientConscious, Double participationPercentage)
    $rm: RespiratorMode(
        name,
        group,
        patientConscious;
    )
    eval(
            participationPercentage > $rm.getParticipationPercentageLB() &&
            participationPercentage < $rm.getParticipationPercentageUB()
    )
//    or
//    ( RespiratorMode(
//        z,
//        group,
//        patientConscious,
//        participationPercentage > participationPercentageLB,
//        participationPercentage < participationPercentageUB;)
//      and isModeAppropriate( name, z, patientConscious, participationPercentage;) )
end

rule "Mode for patient"
    when
    then
end

rule "Recommended mode for patient"
    when
    then
end

rule "find mode"
    when
        RespiratorMode($sName:name, group == "Mode")
        RespiratorMode(this != $sName, group == $sName, $sSubmode:name)
    then
        System.out.println("UNIMPORTANT: " + $sSubmode + " is mode of " + $sName);
end

rule "find assisted mode"
    when
        isModeAppropriate(mode, type, concious, 5.0;)
    then
        System.out.println(mode + " is " + type + " mode.");
end
